CREATE OR REPLACE PACKAGE BODY trans_adm
IS
   PROCEDURE set_default_configs
   IS
   BEGIN
      -- set the notification events
      evolve_adm.set_notification_event
                                      ( 'audit_file',
                                        'file too large',
                                        'File outside size threshholds',
                                        'The file referenced below is larger than the configured threshhold:'
                                      );
      evolve_adm.set_notification_event
                                      ( 'audit_file',
                                        'file too small',
                                        'File outside size threshholds',
                                        'The file referenced below is smaller than the configured threshhold:'
                                      );
      -- load the entries into the ERROR_CONF table for Transcend
      evolve_adm.set_error_conf( p_name         => 'no_files_found',
                                 p_message      => 'No files found for this configuration'
                               );
      evolve_adm.set_error_conf( p_name         => 'no_ext_files',
                                 p_message      => 'There are no files found for this external table'
                               );
      evolve_adm.set_error_conf( p_name         => 'reject_limit_exceeded',
                                 p_message      => 'The external table reject limit was exceeded'
                               );
      evolve_adm.set_error_conf
                            ( p_name         => 'ext_file_missing',
                              p_message      => 'The physical file for the specified external table does not exist'
                            );
      evolve_adm.set_error_conf
         ( p_name         => 'on_clause_missing',
           p_message      => 'Either a unique constraint must exist on the target table, or a value for P_COLUMNS must be specified'
         );
      evolve_adm.set_error_conf
                           ( p_name         => 'incorrect_parameters',
                             p_message      => 'The combination of parameters provided yields no matching objects.'
                           );
      evolve_adm.set_error_conf( p_name         => 'file_too_big',
                                 p_message      => 'File size larger than MAX_BYTES paramter'
                               );
      evolve_adm.set_error_conf( p_name         => 'file_too_small',
                                 p_message      => 'File size smaller than MAX_BYTES paramter'
                               );
      evolve_adm.set_error_conf( p_name         => 'no_stats',
                                 p_message      => 'The specified segment has no stored statistics'
                               );
      evolve_adm.set_error_conf( p_name         => 'owb_flow_err',
                                 p_message      => 'An error was returned from the OWB Control Center'
                               );
      evolve_adm.set_error_conf
         ( p_name         => 'data_cartridge',
           p_message      => 'An unregistered data cartridge error was returned while selecting from the specified external table'
         );
      evolve_adm.set_error_conf
         ( p_name         => 'submit_sql',
           p_message      => 'An error was generated by a process submitted to the Oracle scheduler. See the scheduler logs for details.'
         );
   END set_default_configs;

   PROCEDURE configure_file(
      p_file_label         VARCHAR2,
      p_file_group         VARCHAR2,
      p_file_description   VARCHAR2 DEFAULT NULL,
      p_object_owner       VARCHAR2 DEFAULT NULL,
      p_object_name        VARCHAR2 DEFAULT NULL,
      p_directory          VARCHAR2 DEFAULT NULL,
      p_filename           VARCHAR2 DEFAULT NULL,
      p_arch_directory     VARCHAR2 DEFAULT NULL,
      p_min_bytes          NUMBER DEFAULT NULL,
      p_max_bytes          NUMBER DEFAULT NULL,
      p_file_datestamp     VARCHAR2 DEFAULT NULL,
      p_baseurl            VARCHAR2 DEFAULT NULL,
      p_passphrase         VARCHAR2 DEFAULT NULL,
      p_source_directory   VARCHAR2 DEFAULT NULL,
      p_source_regexp      VARCHAR2 DEFAULT NULL,
      p_regexp_options     VARCHAR2 DEFAULT NULL,
      p_source_policy      VARCHAR2 DEFAULT NULL,
      p_required           VARCHAR2 DEFAULT NULL,
      p_delete_source      VARCHAR2 DEFAULT NULL,
      p_reject_limit       NUMBER,
      p_mode               VARCHAR2 DEFAULT 'upsert'
   )
   IS
   BEGIN
      CASE
         WHEN p_mode = 'insert' AND( p_subject IS NULL OR p_message IS NULL )
         THEN
            raise_application_error( -20014, 'An insert requires a value for all parameters' );
         ELSE
            NULL;
      END CASE;

      IF l_found
      THEN
         file_description := NVL( p_file_description, file_description );
         object_owner := NVL( p_object_owner, object_owner );
         object_name := NVL( p_object_name, object_name );
         DIRECTORY := NVL( p_directory, DIRECTORY );
         filename := NVL( p_filename, filename );
         arch_directory := NVL( p_arch_directory, arch_directory );
         min_bytes := NVL( p_min_bytes, min_bytes );
         max_bytes := NVL( p_max_bytes, max_bytes );
         file_datestamp := NVL( p_file_datestamp, file_datestamp );
         baseurl := NVL( p_baseurl, baseurl );
         passphrase := NVL( p_passphrase, passphrase );
         source_directory := NVL( p_source_directory, source_directory );
         source_regexp := NVL( p_source_regexp, source_regexp );
         regexp_options := NVL( p_regexp_options, regexp_options );
         source_policy := NVL( p_source_policy, source_policy );
         required := NVL( p_required, required );
         delete_source := NVL( p_delete_source, delete_source );
         reject_limit := NVL( p_reject_limit, reject_limit );

         UPDATE feed_ov t
            SET VALUE( t ) = feed_ot
          WHERE t.file_label = p_file_label AND t.file_group = p_file_group;
      ELSE
         INSERT INTO feed_ov
                     ( file_label, file_group, file_type, file_description, object_owner,
                       object_name, DIRECTORY, dirpath, filename, filepath, arch_directory,
                       arch_dirpath, arch_filename, arch_filepath, file_datestamp, min_bytes,
                       max_bytes, baseurl, file_url, passphrase, source_directory, source_dirpath, source_regexp, regexp_options, source_policy, required, delete_source, reject_limit
                     )
              VALUES ( p_file_label, p_file_group, 'feed', p_file_description, p_object_owner,
                       p_object_name, p_directory, p_filename, p_arch_directory, p_min_bytes, p_max_bytes,
                       p_file_datestamp, p_baseurl, p_passphrase, p_source_directory, p_source_regexp,
                       p_regexp_options, p_source_policy, p_required, p_delete_source, p_reject_limit
                     );
      END IF;
   END configure_file;

   PROCEDURE configure_file(
      p_file_label         VARCHAR2,
      p_file_group         VARCHAR2,
      p_file_description   VARCHAR2,
      p_object_owner       VARCHAR2,
      p_object_name        VARCHAR2,
      p_directory          VARCHAR2,
      p_filename           VARCHAR2,
      p_arch_directory     VARCHAR2,
      p_min_bytes          NUMBER,
      p_max_bytes          NUMBER,
      p_file_datestamp     VARCHAR2,
      p_baseurl            VARCHAR2,
      p_dateformat         VARCHAR2,
      p_timestampformat    VARCHAR2,
      p_delimiter          VARCHAR2,
      p_quotechar          VARCHAR2,
      p_headers            VARCHAR2
   )
   IS
   BEGIN
      NULL;
   END configure_file;
END trans_adm;
/

SHOW errors